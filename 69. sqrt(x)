class Solution {
public:
    // int mySqrt(int x) {
    //     long i=1;
    //     //increment i until i*i become greater than x
    //     while(i*i<=x)
    //         ++i;
    //     return i-1;
    // }
    // //time complexity=O(n)
    // //space complexity=O(1)


    //Using binary search
    int mySqrt(int x) {
        long mid;
        int first=0,last=x/4+1;

        while(first<=last){
            mid=(first+last)/2;
            if(mid*mid==x)
                return mid;
            else if(mid*mid<x)
                first=mid+1;
            else 
                last=mid-1;
        }
        //when first become greater than last then return last
        return last;
    }
    //time complexity=O(log n)
    //space complexity=O(1)
    


};
