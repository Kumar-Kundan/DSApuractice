class Solution {
public:
    string multiply(string num1, string num2) {
        if(num1=="0" || num2=="0")
           return "0";

        string resultWI0="";
        int size1=num1.length(),size2=num2.length();

        vector<int> result(size1+size2,0);   //no. of digit is not greater than size1+size2

        for(int i=size1-1;i>=0;--i){
            for(int j=size2-1;j>=0;--j){
                //here we are multiplying diagonally
                result[i+j+1]+=(num1[i]-'0')*(num2[j]-'0');

                //finding carry and saving in previous index
                result[i+j]+=result[i+j+1]/10;

                //find remainder and saving it
                result[i+j+1]=result[i+j+1]%10;
            }
        }
        int i=0;

        //skip initial zero's
        while(result[i]==0)
            ++i;
        //appending all numbers in vector to string
        while(i<result.size())
            resultWI0+=to_string(result[i++]);
        return resultWI0;     
    }
};
